name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t my-devops-app .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: http://localhost:8080  # Update if needed

    steps:
      # Checkout the code from the repo
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubectl-version: 'latest'

      # Configure Kubeconfig using GitHub secrets (must be set up beforehand)
      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG" > ~/.kube/config  # Ensure KUBECONFIG is set as a secret in GitHub

      # Set Kubernetes context (optional: adjust if using Docker Desktop or another cluster)
      - name: Set Kubernetes Context
        run: |
          kubectl config use-context docker-desktop  # Replace 'docker-desktop' with your cluster's context if needed

      # Deploy the application to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernet/deployment.yaml --validate=false  # Optional: Bypass validation if needed
          kubectl apply -f kubernet/service.yaml --validate=false  # Optional: Bypass validation if needed

      # Verify the pod status
      - name: Check pod status
        run: |
          kubectl get pods

      # Port forward to access the application locally (Optional for local dev only)
      - name: Port-forward application
        run: |
          kubectl port-forward service/my-devops-app-service 8080:8080
